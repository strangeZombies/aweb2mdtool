import { Fragment } from 'preact';
import { useSignal } from '@preact/signals';
import { useEffect } from 'preact/hooks';
import { options } from './options';
import { useTranslation } from '@/i18n';

// 定义组件的 props 接口
interface AppProps {
  className?: string; // className 属性可选，类型为 string
}

export function App({ className }: AppProps) {
  const { t } = useTranslation(); // 获取翻译函数
  // 控制面板显示状态
  const showControlPanel = useSignal<boolean>(options.get('showControlPanel') ?? false);

  // 打开控制面板
  const openControlPanel = () => {
    showControlPanel.value = true;
    options.set('showControlPanel', showControlPanel.value);
  };

  // 关闭控制面板
  const closeControlPanel = () => {
    showControlPanel.value = false;
    options.set('showControlPanel', showControlPanel.value);
  };

  // 切换控制面板状态
  const toggleControlPanel = () => {
    if (showControlPanel.value) {
      closeControlPanel();
    } else {
      openControlPanel();
    }
  };

  // 清理函数，关闭控制面板并移除相关 DOM 元素
  const cleanup = () => {
    closeControlPanel(); // 关闭控制面板
    const controlPanelElement = document.getElementById('AWeb2MdTool');
    if (controlPanelElement) {
      controlPanelElement.remove();
    }

    console.log('Control panel closed and cleaned up');
  };

  useEffect(() => {
    // 确保 GM_registerMenuCommand 仅在脚本环境中有效
    if (typeof GM_registerMenuCommand === 'function') {
      GM_registerMenuCommand(t('ToggleControlPanel'), toggleControlPanel);
    }

    // 返回一个清理函数，用于组件卸载时关闭控制面板并清理
    return () => {
      cleanup();
    };
  }, [t]); // 依赖数组中添加翻译函数 t，确保翻译文本更新时重新注册命令

  return (
    <Fragment>
      {/* 控制按钮 */}
      <div
        onClick={toggleControlPanel} // 切换控制面板的显示状态
        className={`group fixed top-1/2 left-[-20px] w-12 h-12 cursor-pointer bg-transparent fill-base-content 
                    ${className}`}
      >
        <div
          className="w-full h-full origin-bottom-center transition-all duration-200 
                        group-hover:translate-x-[5px] group-hover:rotate-[20deg] 
                        opacity-50 group-hover:opacity-90"
        >
          {/* 你可以在这里添加一个图标 */}
        </div>
      </div>

      {/* 这个 div 是全屏虚化窗口 */}
      {showControlPanel.value && (
        <div className="fixed top-0 left-0 w-full h-full bg-black/30 backdrop-blur-lg transition-all duration-300">
          {/* 这个 div 作为背景虚化效果 */}
        </div>
      )}

      {/* 控制面板div */}
      {showControlPanel.value && (
        <div
          id="AWeb2MdTool" // 使用指定的 id
          className="fixed top-20 left-0 w-full bg-white/80 shadow-lg p-4 rounded-lg transition-all duration-300"
        >
          {/* 控制面板内容 */}
          <div className="flex justify-between items-center">
            <div className="text-lg">{t('ControlPanelContent')}</div> {/* 这里也可以用翻译 */}
            <button
              onClick={toggleControlPanel} // 切换控制面板的显示状态
              className="bg-red-500 text-white p-2 rounded-md hover:bg-red-700 transition"
            >
              {t('Close')} {/* 按钮的文本翻译 */}
            </button>
          </div>
        </div>
      )}
    </Fragment>
  );
}
